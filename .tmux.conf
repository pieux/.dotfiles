# modeline and notes {
# vim: set sw=4 ts=4 sts=4 et tw=80 foldmarker={,} foldlevel=0 foldmethod=marker:
# }

# base {
    # use C-a, since it's on the home row and easier to hit than C-b
    set-option -g prefix C-a
    unbind-key C-a
    bind-key C-a send-prefix

    bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

    set -g default-terminal "screen-256color"
    set -g status-utf8 on
    set -g set-titles on
    set -g set-clipboard off
    setw -g automatic-rename on
    # setw -g window-status-attr bold
    # time after which the -r (repeat) in bind -r expires. keep it short.
    set -g repeat-time 300
    setw -g monitor-activity on
    # don't bug me with a message
    set -g visual-activity off
    # like 'timeout' for vim. Just the default.
    set -sg escape-time 500
    set -g mode-keys vi
    set -g history-limit 10000
    # windows/panes start with 1
    set -g base-index 1
    setw -g pane-base-index 1
    set -g default-command "/bin/zsh"
    setw -g xterm-keys on
    set -g status-position top
    set -g renumber-windows on

    set -g terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:colors=256"
# }

# key maps {
    bind-key space next-window
    bind-key bspace previous-window
    bind-key enter next-layout
    bind-key C-n new-window

    bind-key C-w select-pane -U
    bind-key C-s select-pane -D
    bind-key C-a select-pane -L
    bind-key C-d select-pane -R

    unbind %
    bind | split-window -h
    unbind '"'
    bind - split-window -v
# }

# vi-like {
    setw -g mode-keys vi
    setw -g xterm-keys on
    set-option -g status-keys vi
    bind-key -t vi-copy 'v' begin-selection
    bind-key -t vi-copy 'y' copy-selection

    bind-key p run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer" 
    bind-key y save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b < ~/.tmux-buffer && rm ~/.tmux-buffer" \; display-message "Copied to clipboard.."

# }

# mouse {
    set -g mode-mouse on
    set -g mouse-resize-pane on
    set -g mouse-select-pane on
    set -g mouse-select-window on

    # Toggle mouse on with ^B m
    bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

    # Toggle mouse off with ^B M
    bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'
# }

# status bar {
    set -g status-left-length 52
    set -g status-right-length 451
    set -g status-fg white
    set -g status-bg colour234
    set -g window-status-activity-attr bold
    set -g pane-border-fg colour245
    set -g pane-active-border-fg colour46
    set -g message-fg colour16
    set -g message-bg colour221
    set -g message-attr bold

    set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'

    set -g window-status-format "#[fg=white,bg=colour234] #I #W "
    set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=colour25,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour234,nobold]⮀"

    set -g status-right "#[fg=colour245,bold]✔ #[fg=colour245]%H:%M #[fg=magenta]%a %m-%d #[default]"
# }
